10:28:36: Creating resource group General
10:28:36: Creating resource group Internal
10:28:36: Creating resource group Autodetect
10:28:36: SceneManagerFactory for type 'DefaultSceneManager' registered.
10:28:36: Registering ResourceManager for type Material
10:28:36: Registering ResourceManager for type Mesh
10:28:36: Registering ResourceManager for type Skeleton
10:28:36: MovableObjectFactory for type 'ParticleSystem' registered.
10:28:36: ArchiveFactory for archive type FileSystem registered.
10:28:36: ArchiveFactory for archive type Zip registered.
10:28:36: ArchiveFactory for archive type EmbeddedZip registered.
10:28:36: DDS codec registering
10:28:36: FreeImage version: 3.18.0
10:28:36: This program uses FreeImage, a free, open source image library supporting all common bitmap formats. See http://freeimage.sourceforge.net for details
10:28:36: Supported formats: bmp,ico,jpg,jif,jpeg,jpe,jng,koa,iff,lbm,mng,pbm,pbm,pcd,pcx,pgm,pgm,png,ppm,ppm,ras,tga,targa,tif,tiff,wap,wbmp,wbm,psd,psb,cut,xbm,xpm,gif,hdr,g3,sgi,rgb,rgba,bw,exr,j2k,j2c,jp2,pfm,pct,pict,pic,3fr,arw,bay,bmq,cap,cine,cr2,crw,cs1,dc2,dcr,drf,dsc,dng,erf,fff,ia,iiq,k25,kc2,kdc,mdc,mef,mos,mrw,nef,nrw,orf,pef,ptx,pxn,qtk,raf,raw,rdc,rw2,rwl,rwz,sr2,srf,srw,sti,x3f,webp,jxr,wdp,hdp
10:28:36: ETC codec registering
10:28:36: Registering ResourceManager for type HighLevelGpuProgram
10:28:36: Registering ResourceManager for type Compositor
10:28:36: MovableObjectFactory for type 'Entity' registered.
10:28:36: MovableObjectFactory for type 'Light' registered.
10:28:36: MovableObjectFactory for type 'BillboardSet' registered.
10:28:36: MovableObjectFactory for type 'ManualObject' registered.
10:28:36: MovableObjectFactory for type 'BillboardChain' registered.
10:28:36: MovableObjectFactory for type 'RibbonTrail' registered.
10:28:36: Loading library .\RenderSystem_GL_d
10:28:36: Installing plugin: GL RenderSystem
10:28:36: OpenGL Rendering Subsystem created.
10:28:36: Plugin successfully installed
10:28:36: Loading library .\Plugin_OctreeSceneManager_d
10:28:36: Installing plugin: Octree Scene Manager
10:28:36: Plugin successfully installed
10:28:36: *-*-* OGRE Initialising
10:28:36: *-*-* Version 1.9.0 (Ghadamon)
10:28:36: CPU Identifier & Features
10:28:36: -------------------------
10:28:36:  *   CPU ID: GenuineIntel: Intel(R) Core(TM) i5 CPU       M 480  @ 2.67GHz
10:28:36:  *      SSE: yes
10:28:36:  *     SSE2: yes
10:28:36:  *     SSE3: yes
10:28:36:  *      MMX: yes
10:28:36:  *   MMXEXT: yes
10:28:36:  *    3DNOW: no
10:28:36:  * 3DNOWEXT: no
10:28:36:  *     CMOV: yes
10:28:36:  *      TSC: yes
10:28:36:  *      FPU: yes
10:28:36:  *      PRO: yes
10:28:36:  *       HT: no
10:28:36: -------------------------
10:28:36: *** Starting Win32GL Subsystem ***
10:28:36: Registering ResourceManager for type Texture
10:28:36: GLRenderSystem::_createRenderWindow "Rotate on Random Axis : Copyleft by Dae-Hyun Lee", 800x600 windowed  miscParams: FSAA=0 FSAAHint= colourDepth=32 displayFrequency=0 gamma=false vsync=false vsyncInterval=1 
10:28:36: Created Win32Window 'Rotate on Random Axis : Copyleft by Dae-Hyun Lee' : 816x638, 32bpp
10:28:36: GL_VERSION = 4.2.11399 Compatibility Profile Context
10:28:36: GL_VENDOR = ATI Technologies Inc.
10:28:36: GL_RENDERER = ATI Mobility Radeon HD 5800 Series
10:28:36: GL_EXTENSIONS = GL_AMDX_debug_output GL_AMDX_vertex_shader_tessellator GL_AMD_conservative_depth GL_AMD_debug_output GL_AMD_depth_clamp_separate GL_AMD_draw_buffers_blend GL_AMD_multi_draw_indirect GL_AMD_name_gen_delete GL_AMD_performance_monitor GL_AMD_pinned_memory GL_AMD_sample_positions GL_AMD_seamless_cubemap_per_texture GL_AMD_shader_stencil_export GL_AMD_shader_trace GL_AMD_texture_cube_map_array GL_AMD_texture_texture4 GL_AMD_transform_feedback3_lines_triangles GL_AMD_vertex_shader_tessellator GL_ARB_ES2_compatibility GL_ARB_base_instance GL_ARB_blend_func_extended GL_ARB_color_buffer_float GL_ARB_compressed_texture_pixel_storage GL_ARB_conservative_depth GL_ARB_copy_buffer GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_elements_base_vertex GL_ARB_draw_indirect GL_ARB_draw_instanced GL_ARB_explicit_attrib_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_provoking_vertex GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counters GL_ARB_shader_bit_encoding GL_ARB_shader_image_load_store GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_shader_stencil_export GL_ARB_shader_subroutine GL_ARB_shader_texture_lod GL_ARB_shading_language_100 GL_ARB_shading_language_420pack GL_ARB_shading_language_packing GL_ARB_shadow GL_ARB_shadow_ambient GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_compression GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_cube_map_array GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_snorm GL_ARB_texture_storage GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_envmap_bumpmap GL_ATI_fragment_shader GL_ATI_meminfo GL_ATI_separate_stencil GL_ATI_texture_compression_3dc GL_ATI_texture_env_combine3 GL_ATI_texture_float GL_ATI_texture_mirror_once GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_copy_buffer GL_EXT_copy_texture GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_histogram GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_specular_color GL_EXT_shader_image_load_store GL_EXT_shadow_funcs GL_EXT_stencil_wrap GL_EXT_subtexture GL_EXT_texgen_reflection GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_bptc GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_add GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_rectangle GL_EXT_texture_sRGB GL_EXT_texture_shared_exponent GL_EXT_texture_snorm GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_IBM_texture_mirrored_repeat GL_KTX_buffer_region GL_NV_blend_square GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_explicit_multisample GL_NV_float_buffer GL_NV_half_float GL_NV_primitive_restart GL_NV_texgen_reflection GL_NV_texture_barrier GL_SGIS_generate_mipmap GL_SGIS_texture_edge_clamp GL_SGIS_texture_lod GL_SUN_multi_draw_arrays GL_WIN_swap_hint WGL_EXT_swap_control
10:28:36: Supported WGL extensions: WGL_ARB_extensions_string WGL_ARB_pixel_format WGL_ATI_pixel_format_float WGL_ARB_pixel_format_float WGL_ARB_multisample WGL_EXT_swap_control WGL_EXT_swap_control_tear WGL_ARB_pbuffer WGL_ARB_render_texture WGL_ARB_make_current_read WGL_EXT_extensions_string WGL_ARB_buffer_region WGL_EXT_framebuffer_sRGB WGL_ATI_render_texture_rectangle WGL_EXT_pixel_format_packed_float WGL_I3D_genlock WGL_NV_swap_group WGL_ARB_create_context WGL_AMD_gpu_association WGL_AMDX_gpu_association WGL_ARB_create_context_profile WGL_NV_float_buffer
10:28:36: ***************************
10:28:36: *** GL Renderer Started ***
10:28:36: ***************************
10:28:36: Registering ResourceManager for type GpuProgram
10:28:36: GLSL support detected
10:28:36: GL: Using GL_EXT_framebuffer_object for rendering to textures (best)
10:28:36: FBO PF_UNKNOWN depth/stencil support: D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:36: FBO PF_L8 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:36: FBO PF_L16 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_A8 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_A4L4 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_BYTE_LA depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_R5G6B5 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_B5G6R5 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_A4R4G4B4 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_A1R5G5B5 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_R8G8B8 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_B8G8R8 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_A8R8G8B8 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_B8G8R8A8 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_A2R10G10B10 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_A2B10G10R10 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_FLOAT16_RGB depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_FLOAT16_RGBA depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_FLOAT32_RGB depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_FLOAT32_RGBA depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_X8R8G8B8 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_X8B8G8R8 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_SHORT_RGBA depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_R3G3B2 depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_FLOAT16_R depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_FLOAT32_R depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_SHORT_GR depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_FLOAT16_GR depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_FLOAT32_GR depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: FBO PF_SHORT_RGB depth/stencil support: D0S0 D0S1 D0S4 D0S8 D0S16 D16S0 D24S0 D32S0 Packed-D24S8 
10:28:37: [GL] : Valid FBO targets PF_UNKNOWN PF_L8 PF_L16 PF_A8 PF_A4L4 PF_BYTE_LA PF_R5G6B5 PF_B5G6R5 PF_A4R4G4B4 PF_A1R5G5B5 PF_R8G8B8 PF_B8G8R8 PF_A8R8G8B8 PF_B8G8R8A8 PF_A2R10G10B10 PF_A2B10G10R10 PF_FLOAT16_RGB PF_FLOAT16_RGBA PF_FLOAT32_RGB PF_FLOAT32_RGBA PF_X8R8G8B8 PF_X8B8G8R8 PF_SHORT_RGBA PF_R3G3B2 PF_FLOAT16_R PF_FLOAT32_R PF_SHORT_GR PF_FLOAT16_GR PF_FLOAT32_GR PF_SHORT_RGB 
10:28:37: RenderSystem capabilities
10:28:37: -------------------------
10:28:37: RenderSystem Name: OpenGL Rendering Subsystem
10:28:37: GPU Vendor: amd
10:28:37: Device Name: ATI Mobility Radeon HD 5800 Series
10:28:37: Driver Version: 4.2.11399.0
10:28:37:  * Fixed function pipeline: yes
10:28:37:  * Hardware generation of mipmaps: yes
10:28:37:  * Texture blending: yes
10:28:37:  * Anisotropic texture filtering: yes
10:28:37:  * Dot product texture operation: yes
10:28:37:  * Cube mapping: yes
10:28:37:  * Hardware stencil buffer: yes
10:28:37:    - Stencil depth: 8
10:28:37:    - Two sided stencil support: yes
10:28:37:    - Wrap stencil values: yes
10:28:37:  * Hardware vertex / index buffers: yes
10:28:37:  * 32-bit index buffers: yes
10:28:37:  * Vertex programs: yes
10:28:37:  * Number of floating-point constants for vertex programs: 256
10:28:37:  * Number of integer constants for vertex programs: 0
10:28:37:  * Number of boolean constants for vertex programs: 0
10:28:37:  * Fragment programs: yes
10:28:37:  * Number of floating-point constants for fragment programs: 256
10:28:37:  * Number of integer constants for fragment programs: 0
10:28:37:  * Number of boolean constants for fragment programs: 0
10:28:37:  * Geometry programs: yes
10:28:37:  * Number of floating-point constants for geometry programs: 16384
10:28:37:  * Number of integer constants for geometry programs: 0
10:28:37:  * Number of boolean constants for geometry programs: 0
10:28:37:  * Tesselation Hull programs: no
10:28:37:  * Number of floating-point constants for tesselation hull programs: 12288
10:28:37:  * Number of integer constants for tesselation hull programs: 52224
10:28:37:  * Number of boolean constants for tesselation hull programs: 52428
10:28:37:  * Tesselation Domain programs: no
10:28:37:  * Number of floating-point constants for tesselation domain programs: 52428
10:28:37:  * Number of integer constants for tesselation domain programs: 52428
10:28:37:  * Number of boolean constants for tesselation domain programs: 52428
10:28:37:  * Compute programs: no
10:28:37:  * Number of floating-point constants for compute programs: 52428
10:28:37:  * Number of integer constants for compute programs: 52428
10:28:37:  * Number of boolean constants for compute programs: 0
10:28:37:  * Supported Shader Profiles: arbfp1 arbvp1 glsl glsl100 glsl110 glsl120 gp4gp gpu_gp nvgp4 ps_1_1 ps_1_2 ps_1_3 ps_1_4
10:28:37:  * Texture Compression: yes
10:28:37:    - DXT: yes
10:28:37:    - VTC: no
10:28:37:    - PVRTC: no
10:28:37:    - ATC: no
10:28:37:    - ETC1: no
10:28:37:    - ETC2: no
10:28:37:    - BC4/BC5: no
10:28:37:    - BC6H/BC7: no
10:28:37:  * Scissor Rectangle: yes
10:28:37:  * Hardware Occlusion Query: yes
10:28:37:  * User clip planes: yes
10:28:37:  * VET_UBYTE4 vertex element type: yes
10:28:37:  * Infinite far plane projection: yes
10:28:37:  * Hardware render-to-texture: yes
10:28:37:  * Floating point textures: yes
10:28:37:  * Non-power-of-two textures: yes
10:28:37:  * 1d textures: yes
10:28:37:  * Volume textures: yes
10:28:37:  * Multiple Render Targets: 8
10:28:37:    - With different bit depths: yes
10:28:37:  * Point Sprites: yes
10:28:37:  * Extended point parameters: yes
10:28:37:  * Max Point Size: 8192
10:28:37:  * Vertex texture fetch: yes
10:28:37:  * Number of world matrices: 0
10:28:37:  * Number of texture units: 16
10:28:37:  * Stencil buffer depth: 8
10:28:37:  * Number of vertex blend matrices: 0
10:28:37:    - Max vertex textures: 16
10:28:37:    - Vertex textures shared: yes
10:28:37:  * Render to Vertex Buffer : no
10:28:37:  * Hardware Atomic Counters: no
10:28:37:  * GL 1.5 without VBO workaround: no
10:28:37:  * Frame Buffer objects: yes
10:28:37:  * Frame Buffer objects (ARB extension): no
10:28:37:  * Frame Buffer objects (ATI extension): no
10:28:37:  * PBuffer support: yes
10:28:37:  * GL 1.5 without HW-occlusion workaround: no
10:28:37:  * Vertex Array Objects: no
10:28:37:  * Separate shader objects: no
10:28:37: DefaultWorkQueue('Root') initialising on thread b60.
10:28:37: DefaultWorkQueue('Root')::WorkerFunc - thread 1188 starting.
10:28:37: DefaultWorkQueue('Root')::WorkerFunc - thread c40 starting.
10:28:37: DefaultWorkQueue('Root')::WorkerFunc - thread 4bc starting.
10:28:37: DefaultWorkQueue('Root')::WorkerFunc - thread f88 starting.
10:28:37: Particle Renderer Type 'billboard' registered
10:28:37: SceneManagerFactory for type 'OctreeSceneManager' registered.
10:28:37: Added resource location 'resource.zip' of type 'Zip' to resource group 'General'
10:28:37: Added resource location 'fish.zip' of type 'Zip' to resource group 'General'
10:28:37: Parsing scripts for resource group Autodetect
10:28:37: Finished parsing scripts for resource group Autodetect
10:28:37: Creating resources for group Autodetect
10:28:37: All done
10:28:37: Parsing scripts for resource group General
10:28:37: Parsing script Dustin.material
10:28:37: Compiler error: fewer parameters expected in Dustin.material(14): texture_alias must have at most 1 argument
10:28:37: Compiler error: fewer parameters expected in Dustin.material(35): texture_alias must have at most 1 argument
10:28:37: Compiler error: fewer parameters expected in Dustin.material(56): texture_alias must have at most 1 argument
10:28:37: Compiler error: fewer parameters expected in Dustin.material(77): texture_alias must have at most 1 argument
10:28:37: Compiler error: fewer parameters expected in Dustin.material(98): texture_alias must have at most 1 argument
10:28:37: Parsing script ninja.material
10:28:37: Parsing script axes.material
10:28:37: Parsing script fish.material
10:28:37: Parsing script fish.material
10:28:37: Finished parsing scripts for resource group General
10:28:37: Creating resources for group General
10:28:37: All done
10:28:37: Parsing scripts for resource group Internal
10:28:37: Finished parsing scripts for resource group Internal
10:28:37: Creating resources for group Internal
10:28:37: All done
10:28:37: Mesh: Loading axes.mesh.
10:28:37: WARNING: axes.mesh is an older format ([MeshSerializer_v1.30]); you should upgrade it as soon as possible using the OgreMeshUpgrade tool.
10:28:37: Texture: axes.png: Loading 1 faces(PF_R8G8B8,256x256x1) with 8 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,256x256x1.
10:28:37: Can't assign material GridPlaneMaterial to the ManualObject GridPlane because this Material does not exist. Have you forgotten to define it in a .material script?
10:28:37: Mesh: Loading DustinBody.mesh.
10:28:37: Skeleton: Loading DustinBody_mesh.skeleton
10:28:37: WARNING: DustinBody.mesh is an older format ([MeshSerializer_v1.30]); you should upgrade it as soon as possible using the OgreMeshUpgrade tool.
10:28:37: Texture: dustinbody.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
10:28:37: Texture: DustinFace.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
10:28:38: Texture: dustinface.png: Loading 1 faces(PF_A8R8G8B8,1024x1024x1) with 10 hardware generated mipmaps from Image. Internal format is PF_A8R8G8B8,1024x1024x1.
10:28:38: Mesh: Loading Fish.mesh.
10:28:38: Skeleton: Loading fish.skeleton
10:28:38: WARNING: Fish.mesh is an older format ([MeshSerializer_v1.40]); you should upgrade it as soon as possible using the OgreMeshUpgrade tool.
10:28:38: Texture: steelhead.png: Loading 1 faces(PF_R8G8B8,256x256x1) with 8 hardware generated mipmaps from Image. Internal format is PF_X8R8G8B8,256x256x1.
10:28:38: WARNING: the mesh 'Fish.mesh' includes vertices without bone assignments. Those vertices will transform to wrong position when skeletal animation enabled. To eliminate this, assign at least one bone assignment per vertex on your mesh.
10:28:41: DefaultWorkQueue('Root') shutting down on thread b60.
10:28:41: DefaultWorkQueue('Root')::WorkerFunc - thread 4bc stopped.
10:28:41: DefaultWorkQueue('Root')::WorkerFunc - thread 1188 stopped.
10:28:41: DefaultWorkQueue('Root')::WorkerFunc - thread f88 stopped.
10:28:41: DefaultWorkQueue('Root')::WorkerFunc - thread c40 stopped.
10:28:41: *-*-* OGRE Shutdown
10:28:41: Unregistering ResourceManager for type Compositor
10:28:41: Unregistering ResourceManager for type Skeleton
10:28:41: Unregistering ResourceManager for type Mesh
10:28:41: Unregistering ResourceManager for type HighLevelGpuProgram
10:28:41: Uninstalling plugin: Octree Scene Manager
10:28:41: Plugin successfully uninstalled
10:28:41: Unloading library .\Plugin_OctreeSceneManager_d
10:28:41: Uninstalling plugin: GL RenderSystem
10:28:41: Unregistering ResourceManager for type GpuProgram
10:28:41: *** Stopping Win32GL Subsystem ***
10:28:41: Unregistering ResourceManager for type Texture
10:28:41: Plugin successfully uninstalled
10:28:41: Unloading library .\RenderSystem_GL_d
10:28:41: Unregistering ResourceManager for type Material
